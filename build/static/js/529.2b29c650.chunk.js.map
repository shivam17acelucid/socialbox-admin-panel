{"version":3,"file":"static/js/529.2b29c650.chunk.js","mappings":"oMAEaA,EAAc,CAEvB,CACIC,MAAO,UACPC,KAAK,WACLC,MAAM,SAAC,MAAmB,IAC1BC,MAAO,YAEX,CACIH,MAAO,OACPE,MAAM,SAAC,MAAe,IACtBD,KAAM,QACNE,MAAO,YAEX,CACIH,MAAO,cACPC,KAAM,iBACNC,MAAM,SAAC,MAAoB,IAC3BC,MAAO,a,oBC0Bf,MApCA,WACI,OAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAEd,OAF0B,MAGtB,SAAC,cAAoB,CAACC,MAAO,CAAEC,MAAO,QAAS,UAC3C,gBAAKC,UAAWH,EAAU,WAAa,kBAAkB,UACrD,iBAAKG,UAAU,SAAQ,WACnB,gBAAKC,IAAKC,EAAMF,UAAU,UAC1B,eAAIA,UAAU,iBAAgB,SAEtBT,EAAYY,KAAI,SAACC,EAAMC,GACnB,OACI,eAAIL,UAAWI,EAAKT,MAAM,UAEN,IAAZE,GACI,SAAC,KAAI,CAACS,GAAIF,EAAKX,KAAK,SACfW,EAAKV,QAGV,UAAC,KAAI,CAACY,GAAIF,EAAKX,KAAK,UACfW,EAAKV,MACN,0BACEU,EAAKZ,YAM/B,YAO5B,C,qHCkDA,MAxFA,WAAmB,IAAD,EAEd,GAAwDI,EAAAA,EAAAA,WAAS,GAAM,eAAhEW,EAAoB,KAAEC,EAAuB,KACpD,GAAsDZ,EAAAA,EAAAA,WAAS,GAAM,eAA9Da,EAAmB,KAAEC,EAAsB,KAC5CC,EAASC,aAAaC,QAAQ,MAC9BC,EAAWF,aAAaC,QAAQ,QAChCE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAGXC,EAAyE,QAA/D,EADK,CAAC,CAAEC,KAAK,SAAD,OAAWX,GAAUY,KAAM,QAAU,CAAED,KAAM,gBAAiBC,KAAM,iBAAmB,CAAED,KAAM,sBAAuBC,KAAM,uBAAyB,CAAED,KAAM,oBAAqBC,KAAM,kBAAoB,CAAED,KAAM,qBAAsBC,KAAM,qBAAuB,CAAED,KAAM,aAAcC,KAAM,QAAU,CAAED,KAAM,WAAYC,KAAM,sBAAwB,CAAED,KAAK,kBAAD,OAAoBX,GAAUY,KAAM,oBAAsB,CAAED,KAAK,aAAeC,KAAM,mBACvbC,MAAK,SAAAC,GAAE,OAAIR,EAASS,SAASC,SAASF,EAAGH,KAAK,WAAC,aAA5D,EAA8DC,KAwC/E,OA7BAK,EAAAA,EAAAA,YAAU,WANElB,EADW,wBAAfW,GAAuD,kBAAfA,EAShD,GAAG,CAACF,KA4BA,iCACI,iBAAKnB,UAAU,SAAQ,WACnB,iBAAKA,WAAmC,IAAxBS,EAA+B,sBAAwB,aAAa,UAC/EY,GAAc,cACC,wBAAfA,GAAuD,kBAAfA,GACrC,iBAAKQ,MAAO,CAAEC,QAAS,OAAQC,WAAY,QAAS,WAChD,gBAAKF,MAAO,CAAEG,YAAa,WAAY,UACnC,SAAC,KAAI,CAAC1B,GAAG,sBAAsBN,UAAU,WAAU,SAAC,mBAExD,gBAAK6B,MAAO,CAAEG,YAAa,UAAW,UAClC,SAAC,KAAI,CAAC1B,GAAG,gBAAgBN,UAAU,WAAU,SAAC,cAItD,SAGR,iBAAK6B,MAAO,CAAEC,QAAS,OAAQG,WAAY,UAAW,WAClD,iBAAMjC,UAAU,mBAAkB,UAAC,gBAAKC,I,80BACxC,gBAAKA,I,66FAAeD,UAAU,sBAC9B,iBAAMA,UAAU,kBAAiB,SAAEc,KACnC,iBAAMe,MAAO,CAAEK,YAAa,OAAQC,OAAQ,WAAY,UAAC,SAAC,MAAsB,CAACC,QA/C/D,WAE9B5B,GADWD,EAEf,aAgDqC,IAAzBA,GACI,iBAAKP,UAAU,WAAU,WACrB,gBAAKoC,QAhDe,WACpCrB,EAAS,kBAAD,OAAmBJ,GAC/B,EA8CmEX,UAAU,iBAAgB,SAAC,sBAC1E,gBAAKoC,QA7CM,WAC3BrB,EAAS,SACb,EA2C0Df,UAAU,iBAAgB,SAAC,WACjE,gBAAKoC,QA1CJ,WAChB,KACDxB,aAAayB,OAQjB,EAgCgDrC,UAAU,iBAAgB,UAAC,SAAC,KAAI,CAACM,GAAG,IAAG,SAAC,gBAEtE,OAItB,C,sJCy8BA,MA/hCA,WAEI,OAAkDV,EAAAA,EAAAA,WAAS,GAAK,eAAzD0C,EAAiB,KAAEC,EAAoB,KAC9C,GAAkD3C,EAAAA,EAAAA,WAAS,GAAM,eAA1D4C,EAAiB,KAAEC,EAAoB,KAC9C,GAAoD7C,EAAAA,EAAAA,WAAS,GAAM,eAA5D8C,EAAkB,KAAEC,EAAqB,KAChD,GAAwD/C,EAAAA,EAAAA,WAAS,GAAM,eAAhEgD,EAAoB,KAAEC,EAAuB,KACpD,GAAoDjD,EAAAA,EAAAA,WAAS,GAAM,eAA5DkD,EAAkB,KAAEC,EAAqB,KAChD,GAAkDnD,EAAAA,EAAAA,WAAS,GAAM,eAA1DoD,EAAiB,KAAEC,EAAoB,KAC9C,GAAsCrD,EAAAA,EAAAA,UAAS,IAAG,eAA3CsD,EAAW,KAAEC,EAAc,KAClC,GAA8CvD,EAAAA,EAAAA,UAAS,GAAE,eAAlDwD,EAAe,KACtB,GAD0C,MACQxD,EAAAA,EAAAA,WAAS,IAAM,eAA1DyD,EAAiB,KAAEC,EAAoB,KAC9C,GAAgC1D,EAAAA,EAAAA,UAAS,IAAG,eAArC2D,EAAQ,KAAEC,EAAW,KAE5B,GAA4D5D,EAAAA,EAAAA,UAAS,GAAE,eAAhE6D,EAAsB,KAAEC,EAAyB,KACxD,GAA4D9D,EAAAA,EAAAA,UAAS,GAAE,eAAhE+D,EAAsB,KAAEC,GAAyB,KACxD,IAAoDhE,EAAAA,EAAAA,UAAS,GAAE,iBAAxDiE,GAAkB,MAAEC,GAAqB,MAChD,IAAoDlE,EAAAA,EAAAA,UAAS,GAAE,iBAAxDmE,GAAkB,MAAEC,GAAqB,MAChD,IAA0DpE,EAAAA,EAAAA,UAAS,GAAE,iBAA9DqE,GAAqB,MAAEC,GAAwB,MACtD,IAA0DtE,EAAAA,EAAAA,UAAS,GAAE,iBAA9DuE,GAAqB,MAAEC,GAAwB,MAGtD,IAA4DxE,EAAAA,EAAAA,UAAS,GAAE,iBAAhEyE,GAAsB,MAAEC,GAAyB,MACxD,IAA4D1E,EAAAA,EAAAA,UAAS,GAAE,iBAAhE2E,GAAsB,MAAEC,GAAyB,MACxD,IAAoD5E,EAAAA,EAAAA,UAAS,GAAE,iBAAxD6E,GAAkB,MAAEC,GAAqB,MAChD,IAAoD9E,EAAAA,EAAAA,UAAS,GAAE,iBAAxD+E,GAAkB,MAAEC,GAAqB,MAChD,IAA0DhF,EAAAA,EAAAA,UAAS,GAAE,iBAA9DiF,GAAqB,MAAEC,GAAwB,MACtD,IAA0DlF,EAAAA,EAAAA,UAAS,GAAE,iBAA9DmF,GAAqB,MAAEC,GAAwB,MAGtD,IAA8DpF,EAAAA,EAAAA,UAAS,GAAE,iBAAlEqF,GAAuB,MAAEC,GAA0B,MAC1D,IAA8DtF,EAAAA,EAAAA,UAAS,GAAE,iBAAlEuF,GAAuB,MAAEC,GAA0B,MAC1D,IAAsDxF,EAAAA,EAAAA,UAAS,GAAE,iBAA1DyF,GAAmB,MAAEC,GAAsB,MAClD,IAAsD1F,EAAAA,EAAAA,UAAS,GAAE,iBAA1D2F,GAAmB,MAAEC,GAAsB,MAClD,IAA4D5F,EAAAA,EAAAA,UAAS,GAAE,iBAAhE6F,GAAsB,MAAEC,GAAyB,MACxD,IAA4D9F,EAAAA,EAAAA,UAAS,GAAE,iBAAhE+F,GAAsB,MAAEC,GAAyB,MAGxD,IAA4EhG,EAAAA,EAAAA,UAAS,GAAE,iBAAhFiG,GAA8B,MAAEC,GAAiC,MACxE,IAA4ElG,EAAAA,EAAAA,UAAS,GAAE,iBAAhFmG,GAA8B,MAAEC,GAAiC,MACxE,IAAoEpG,EAAAA,EAAAA,UAAS,GAAE,iBAAxEqG,GAA0B,MAAEC,GAA6B,MAChE,IAAoEtG,EAAAA,EAAAA,UAAS,GAAE,iBAAxEuG,GAA0B,MAAEC,GAA6B,MAChE,IAA0ExG,EAAAA,EAAAA,UAAS,GAAE,iBAA9EyG,GAA6B,MAAEC,GAAgC,MACtE,IAA0E1G,EAAAA,EAAAA,UAAS,GAAE,iBAA9E2G,GAA6B,MAAEC,GAAgC,MAGtE,IAA8D5G,EAAAA,EAAAA,UAAS,GAAE,iBAAlE6G,GAAuB,MAAEC,GAA0B,MAC1D,IAA8D9G,EAAAA,EAAAA,UAAS,GAAE,iBAAlE+G,GAAuB,MAAEC,GAA0B,MAC1D,IAAsDhH,EAAAA,EAAAA,UAAS,GAAE,iBAA1DiH,GAAmB,MAAEC,GAAsB,MAClD,IAAsDlH,EAAAA,EAAAA,UAAS,GAAE,iBAA1DmH,GAAmB,MAAEC,GAAsB,MAClD,IAA4DpH,EAAAA,EAAAA,UAAS,GAAE,iBAAhEqH,GAAsB,MAAEC,GAAyB,MACxD,IAA4DtH,EAAAA,EAAAA,UAAS,GAAE,iBAAhEuH,GAAsB,MAAEC,GAAyB,MAGxD,IAA4DxH,EAAAA,EAAAA,UAAS,GAAE,iBAAhEyH,GAAsB,MAAEC,GAAyB,MACxD,IAA4D1H,EAAAA,EAAAA,UAAS,GAAE,iBAAhE2H,GAAsB,MAAEC,GAAyB,MACxD,IAAoD5H,EAAAA,EAAAA,UAAS,GAAE,iBAAxD6H,GAAkB,MAAEC,GAAqB,MAChD,IAAoD9H,EAAAA,EAAAA,UAAS,GAAE,iBAAxD+H,GAAkB,MAAEC,GAAqB,MAChD,IAA0DhI,EAAAA,EAAAA,UAAS,GAAE,iBAA9DiI,GAAqB,MAAEC,GAAwB,MACtD,IAA0DlI,EAAAA,EAAAA,UAAS,GAAE,iBAA9DmI,GAAqB,MAAEC,GAAwB,MAEtD,IAA0CpI,EAAAA,EAAAA,UAAS,IAAG,iBAA/CqI,GAAa,MAAEC,GAAgB,MACtC,IAA0CtI,EAAAA,EAAAA,UAAS,IAAG,iBAA/CuI,GAAa,MAAEC,GAAgB,MACtC,IAA4CxI,EAAAA,EAAAA,UAAS,IAAG,iBAAjDyI,GAAc,MAAEC,GAAiB,MACxC,IAA0D1I,EAAAA,EAAAA,UAAS,IAAG,iBAA/D2I,GAAqB,MAAEC,GAAwB,MACtD,IAA4C5I,EAAAA,EAAAA,UAAS,IAAG,iBAAjD6I,GAAc,MAAEC,GAAiB,MACxC,IAA0C9I,EAAAA,EAAAA,UAAS,IAAG,iBAA/C+I,GAAa,MAAEC,GAAgB,MAEtC,IAAgDhJ,EAAAA,EAAAA,UAAS,GAAE,iBAApDiJ,GAAgB,MAAEC,GAAmB,MAC5C,IAAgDlJ,EAAAA,EAAAA,UAAS,GAAE,iBAApDmJ,GAAgB,MAAEC,GAAmB,MAC5C,IAAkDpJ,EAAAA,EAAAA,UAAS,GAAE,iBAAtDqJ,GAAiB,MAAEC,GAAoB,MAC9C,IAAsDtJ,EAAAA,EAAAA,UAAS,GAAE,iBAA1DuJ,GAAmB,MAAEC,GAAsB,MAClD,IAAkDxJ,EAAAA,EAAAA,UAAS,GAAE,iBAAtDyJ,GAAiB,MAAEC,GAAoB,MAC9C,IAAgD1J,EAAAA,EAAAA,UAAS,GAAE,iBAApD2J,GAAgB,MAAEC,GAAmB,MAC5C,IAAgD5J,EAAAA,EAAAA,UAAS,GAAE,iBAApD6J,GAAgB,MAAEC,GAAmB,MAC5C,IAAgD9J,EAAAA,EAAAA,UAAS,GAAE,iBAApD+J,GAAgB,MAAEC,GAAmB,MAC5C,IAAkDhK,EAAAA,EAAAA,UAAS,GAAE,iBAAtDiK,GAAiB,MAAEC,GAAoB,MAC9C,IAAsDlK,EAAAA,EAAAA,UAAS,GAAE,iBAA1DmK,GAAmB,MAAEC,GAAsB,MAClD,IAAkDpK,EAAAA,EAAAA,UAAS,GAAE,iBAAtDqK,GAAiB,MAAEC,GAAoB,MAC9C,IAAgDtK,EAAAA,EAAAA,UAAS,GAAE,iBAApDuK,GAAgB,MAAEC,GAAmB,MAE5C,IAAoDxK,EAAAA,EAAAA,WAAS,GAAM,iBAA5DyK,GAAkB,MAAEC,GAAqB,MAsB1CC,GAAc,SAACC,GACjBhH,EAAYgH,EAAEC,OAAOC,WACrBvH,EAAe,IACfG,GAAqB,EACzB,EAEMqH,GAAc,WAChB,OACI,+BACI,gBAAK3K,UAAU,6BAA6B6B,MAAO,CAAE+I,UAAW,WAAY,UACxE,iBAAK5K,UAAU,6CAA4C,WACvD,gBAAK6B,MAAO,CACRgJ,OAAQ,WAAYC,QAAS,EAAGC,WAAY,YAC5CC,UAAW,SACXC,WAAY,IACZC,SAAU,WACVC,WAAY,OACZpL,MAAO,sBACT,SAAC,gBACFmD,EAAY/C,KAAI,SAACiL,EAAY/K,GAC1B,OACI,gBACIL,UAAWK,IAAU+C,EAAkB,SAAW,GAElDhB,QAASmI,GAAY,SAEpBa,EAAW7H,UAHPlD,EAMjB,UAKpB,EA+BMgL,GAAuB,WACzB,IAAIC,EAA+B7H,EAC/B8H,EAA+B5H,EAC/B6H,EAA2BvH,GAC3BwH,EAA2BtH,GAC3BuH,EAAwB7H,GACxB8H,EAAwB5H,GAG5B6H,MADO,8CACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAEX,6BAAAA,EAA8BC,6BAAAA,EAA8BC,yBAAAA,EAA0BC,yBAAAA,EAA0BC,sBAAAA,EAAuBC,sBAAAA,MAE7JO,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EAEMiC,GAAuB,WACzB,IAAIC,EAAgClI,GAChCmI,EAAgCjI,GAChCkI,EAA4B5H,GAC5B6H,EAA4B3H,GAC5B4H,EAAyBlI,GACzBmI,EAAyBjI,GAG7BiH,MADO,+CACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAEM,8BAAAA,EAA+BC,8BAAAA,EAA+BC,0BAAAA,EAA2BC,0BAAAA,EAA2BC,uBAAAA,EAAwBC,uBAAAA,MAElKV,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EAEMwC,GAAwB,WAC1B,IAAIC,EAAgC7H,GAChC8H,EAAgC5H,GAChC6H,EAA4BvH,GAC5BwH,EAA4BtH,GAC5BuH,EAAyB7H,GACzB8H,EAAyB5H,GAG7BqG,MADO,iDACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAEa,8BAAAA,EAA+BC,8BAAAA,EAA+BC,0BAAAA,EAA2BC,0BAAAA,EAA2BC,uBAAAA,EAAwBC,uBAAAA,MAElKjB,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EAEM+C,GAA0B,WAC5B,IAAIC,EAAuCxH,GACvCyH,EAAuCvH,GACvCwH,EAAgCtH,GAChCuH,EAAgCrH,GAChCsH,EAAmCpH,GACnCqH,EAAmCnH,GAGvCqF,MADO,wDACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAEoB,qCAAAA,EAAsCC,qCAAAA,EAAsCC,8BAAAA,EAA+BC,8BAAAA,EAA+BC,iCAAAA,EAAkCC,iCAAAA,MAElMxB,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EAEMsD,GAAwB,WAC1B,IAAIC,EAAgCnH,GAChCoH,EAAgClH,GAChCmH,EAAyBjH,GACzBkH,EAAyBhH,GACzBiH,EAA4B/G,GAC5BgH,EAA4B9G,GAGhCyE,MADO,gDACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAE2B,8BAAAA,EAA+BC,8BAAAA,EAA+BC,uBAAAA,EAAwBC,uBAAAA,EAAwBC,0BAAAA,EAA2BC,0BAAAA,MAE/J/B,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EAEM6D,GAAuB,WACzB,IAAIC,EAA+B9G,GAC/B+G,EAA+B7G,GAC/B8G,EAAwB5G,GACxB6G,EAAwB3G,GACxB4G,EAA2B1G,GAC3B2G,EAA2BzG,GAG/B6D,MADO,8CACM,CACTC,OAAQ,OACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAEkC,6BAAAA,EAA8BC,6BAAAA,EAA8BC,sBAAAA,EAAuBC,sBAAAA,EAAuBC,yBAAAA,EAA0BC,yBAAAA,MAE1JtC,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH/B,IAAuBD,GAC3B,GACR,GACR,EA4EA,OAJAzI,EAAAA,EAAAA,YAAU,WApENgK,MADO,oCAEFM,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GAAU,IAAD,YAEiB,0BAUC,0BAUE,0BAUA,gCAUF,uCAUD,uCAnD7BoC,QAAQC,IAAIrC,GACD,QAAX,EAAIA,EAAK,UAAE,OAAP,EAASsC,iBACTjL,EAAiC,QAAR,EAAC2I,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBrD,8BACnD1H,GAAiC,QAAR,EAACyI,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBpD,8BACnDzH,GAA6B,QAAR,EAACuI,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBjD,uBAC/C1H,GAA6B,QAAR,EAACqI,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBhD,uBAC/CzH,GAAgC,QAAR,EAACmI,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBnD,0BAClDpH,GAAgC,QAAR,EAACiI,EAAK,UAAE,OAAgB,QAAhB,EAAP,EAASsC,sBAAc,WAAhB,EAAP,EAAyBlD,0BAClDvD,GAAiB,CAAQ,QAAR,EAACmE,EAAK,UAAE,aAAP,EAASsC,kBAGpB,QAAX,EAAItC,EAAK,UAAE,OAAP,EAASuC,kBACTtK,GAAiC,QAAR,EAAC+H,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BrC,+BACpD/H,GAAiC,QAAR,EAAC6H,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BpC,+BACpD9H,GAA6B,QAAR,EAAC2H,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BjC,wBAChD/H,GAA6B,QAAR,EAACyH,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BhC,wBAChD9H,GAAgC,QAAR,EAACuH,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BnC,2BACnDzH,GAAgC,QAAR,EAACqH,EAAK,UAAE,OAAiB,QAAjB,EAAP,EAASuC,uBAAe,WAAjB,EAAP,EAA0BlC,2BACnDtE,GAAiB,CAAQ,QAAR,EAACiE,EAAK,UAAE,aAAP,EAASuC,mBAGpB,QAAX,EAAIvC,EAAK,UAAE,OAAP,EAASwC,oBACT3J,GAAkC,QAAR,EAACmH,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B/B,+BACvD1H,GAAkC,QAAR,EAACiH,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B9B,+BACvDzH,GAA8B,QAAR,EAAC+G,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B3B,wBACnD1H,GAA8B,QAAR,EAAC6G,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B1B,wBACnDzH,GAAiC,QAAR,EAAC2G,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B7B,2BACtDpH,GAAiC,QAAR,EAACyG,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASwC,yBAAiB,WAAnB,EAAP,EAA4B5B,2BACtD3E,GAAkB,CAAQ,QAAR,EAAC+D,EAAK,UAAE,aAAP,EAASwC,qBAGrB,QAAX,EAAIxC,EAAK,UAAE,OAAP,EAASyC,oBACThJ,GAAyC,QAAR,EAACuG,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASyC,yBAAiB,WAAnB,EAAP,EAA4BzB,sCAC9DrH,GAAyC,QAAR,EAACqG,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASyC,yBAAiB,WAAnB,EAAP,EAA4BxB,sCAC9DpH,GAAqC,QAAR,EAACmG,EAAK,UAAE,OAAmB,QAAnB,EAAP,EAASyC,yBAAiB,WAAnB,EAAP,EAA4BvB,+BAC1DnH,GAAqC,QAAR,EAACiG,EAAK,UAAE,OAAmB,QAAnB,GAAP,EAASyC,yBAAiB,YAAnB,EAAP,GAA4BtB,+BAC1DlH,GAAwC,QAAR,GAAC+F,EAAK,UAAE,QAAmB,QAAnB,GAAP,GAASyC,yBAAiB,YAAnB,EAAP,GAA4BrB,kCAC7DjH,GAAwC,QAAR,GAAC6F,EAAK,UAAE,QAAmB,QAAnB,GAAP,GAASyC,yBAAiB,YAAnB,EAAP,GAA4BpB,kCAC7DlF,GAAyB,CAAQ,QAAR,GAAC6D,EAAK,UAAE,cAAP,GAASyC,qBAG5B,QAAX,EAAIzC,EAAK,UAAE,OAAP,EAAS0C,kBACTrI,GAAkC,QAAR,GAAC2F,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0BnB,+BACrDhH,GAAkC,QAAR,GAACyF,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0BlB,+BACrD/G,GAA8B,QAAR,GAACuF,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0BjB,wBACjD9G,GAA8B,QAAR,GAACqF,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0BhB,wBACjD7G,GAAiC,QAAR,GAACmF,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0Bf,2BACpD5G,GAAiC,QAAR,GAACiF,EAAK,UAAE,QAAiB,QAAjB,GAAP,GAAS0C,uBAAe,YAAjB,EAAP,GAA0Bd,2BACpDvF,GAAkB,CAAQ,QAAR,GAAC2D,EAAK,UAAE,cAAP,GAAS0C,mBAGrB,QAAX,EAAI1C,EAAK,UAAE,OAAP,EAAS2C,iBACT1H,GAAiC,QAAR,GAAC+E,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBb,8BACnD3G,GAAiC,QAAR,GAAC6E,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBZ,8BACnD1G,GAA6B,QAAR,GAAC2E,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBX,uBAC/CzG,GAA6B,QAAR,GAACyE,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBV,uBAC/CxG,GAAgC,QAAR,GAACuE,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBT,0BAClDvG,GAAgC,QAAR,GAACqE,EAAK,UAAE,QAAgB,QAAhB,GAAP,GAAS2C,sBAAc,YAAhB,EAAP,GAAyBR,0BAClD5F,GAAiB,CAAQ,QAAR,GAACyD,EAAK,UAAE,cAAP,GAAS2C,iBAEnC,GACR,GAKR,GAAG,CAAC3E,MAGA,+BACI,iBAAKrK,UAAU,gCAA+B,WAC1C,gBAAKA,UAAU,6CAA4C,UACvD,SAAC,IAAO,OAEZ,iBAAKA,UAAU,6DAA4D,WACvE,gBAAKA,UAAU,iBAAgB,UAC3B,gBAAKA,UAAU,kDAAiD,UAC5D,SAAC,IAAM,SAGf,gBAAKA,UAAU,sBAAqB,UAChC,iBAAKA,UAAU,mCAAkC,WAC7C,iBAAKA,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,wBAI5C,IAAtBsC,GACI,gBAAKtC,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMG,GAAqB,EAAM,OAG7D,gBAAKvC,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMG,GAAqB,EAAK,UAKhD,IAAtBD,EACI2F,GAAc9H,KAAI,SAACC,GAAI,OACnB,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKkL,6BAA8B6D,SAAU,SAAC3E,GAAQ9G,EAA0B8G,EAAEC,OAAO3K,MAAO,OAEvI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKmL,6BAA8B4D,SAAU,SAAC3E,GAAQ5G,GAA0B4G,EAAEC,OAAO3K,MAAO,UAG3I,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKsL,sBAAuByD,SAAU,SAAC3E,GAAQ1G,GAAsB0G,EAAEC,OAAO3K,MAAO,OAE5H,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKuL,sBAAuBwD,SAAU,SAAC3E,GAAQxG,GAAsBwG,EAAEC,OAAO3K,MAAO,UAGhI,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKoL,yBAA0B2D,SAAU,SAAC3E,GAAQtG,GAAyBsG,EAAEC,OAAO3K,MAAO,OAElI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKqL,yBAA0B0D,SAAU,SAAC3E,GAAQpG,GAAyBoG,EAAEC,OAAO3K,MAAO,UAGtI,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAASiJ,GAAqB,SAAC,eAEhE,IAGV,SAIZ,iBAAKrL,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,wBAI5C,IAAtBwC,GACI,gBAAKxC,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMK,GAAqB,EAAM,OAG7D,gBAAKzC,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMK,GAAqB,EAAK,UAKhD,IAAtBD,EACI2F,GAAchI,KAAI,SAACC,GAAI,OACnB,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKmM,8BAA+B4C,SAAU,SAAC3E,GAAQlG,GAA0BkG,EAAEC,OAAO3K,MAAO,OAExI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKoM,8BAA+B2C,SAAU,SAAC3E,GAAQhG,GAA0BgG,EAAEC,OAAO3K,MAAO,UAG5I,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKuM,uBAAwBwC,SAAU,SAAC3E,GAAQ9F,GAAsB8F,EAAEC,OAAO3K,MAAO,OAE7H,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKwM,uBAAwBuC,SAAU,SAAC3E,GAAQ5F,GAAsB4F,EAAEC,OAAO3K,MAAO,UAGjI,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKqM,0BAA2B0C,SAAU,SAAC3E,GAAQ1F,GAAyB0F,EAAEC,OAAO3K,MAAO,OAEnI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKsM,0BAA2ByC,SAAU,SAAC3E,GAAQxF,GAAyBwF,EAAEC,OAAO3K,MAAO,UAGvI,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAASkK,GAAqB,SAAC,eAEhE,IAGV,SAGZ,iBAAKtM,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,yBAI3C,IAAvB0C,GACI,gBAAK1C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMO,GAAsB,EAAM,OAG9D,gBAAK3C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMO,GAAsB,EAAK,UAKhD,IAAvBD,EACI2F,GAAelI,KAAI,SAACC,GAAI,OACpB,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK0M,8BAA+BqC,SAAU,SAAC3E,GAAQtF,GAA2BsF,EAAEC,OAAO3K,MAAO,OAEzI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK2M,8BAA+BoC,SAAU,SAAC3E,GAAQpF,GAA2BoF,EAAEC,OAAO3K,MAAO,UAG7I,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK8M,uBAAwBiC,SAAU,SAAC3E,GAAQlF,GAAuBkF,EAAEC,OAAO3K,MAAO,OAE9H,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK+M,uBAAwBgC,SAAU,SAAC3E,GAAQhF,GAAuBgF,EAAEC,OAAO3K,MAAO,UAGlI,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK4M,0BAA2BmC,SAAU,SAAC3E,GAAQ9E,GAA0B8E,EAAEC,OAAO3K,MAAO,OAEpI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK6M,0BAA2BkC,SAAU,SAAC3E,GAAQ5E,GAA0B4E,EAAEC,OAAO3K,MAAO,UAGxI,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAASyK,GAAsB,SAAC,eAEjE,IAGV,SAIZ,iBAAK7M,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,kCAIzC,IAAzB4C,GACI,gBAAK5C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMS,GAAwB,EAAM,OAGhE,gBAAK7C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMS,GAAwB,EAAK,UAKhD,IAAzBD,EACI2F,GAAsBpI,KAAI,SAACC,GAAI,OAC3B,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKiN,qCAAsC8B,SAAU,SAAC3E,GAAQ1E,GAAkC0E,EAAEC,OAAO3K,MAAO,OAEvJ,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKkN,qCAAsC6B,SAAU,SAAC3E,GAAQxE,GAAkCwE,EAAEC,OAAO3K,MAAO,UAG3J,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKmN,8BAA+B4B,SAAU,SAAC3E,GAAQtE,GAA8BsE,EAAEC,OAAO3K,MAAO,OAE5I,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKoN,8BAA+B2B,SAAU,SAAC3E,GAAQpE,GAA8BoE,EAAEC,OAAO3K,MAAO,UAGhJ,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKqN,iCAAkC0B,SAAU,SAAC3E,GAAQlE,GAAiCkE,EAAEC,OAAO3K,MAAO,OAElJ,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKsN,iCAAkCyB,SAAU,SAAC3E,GAAQhE,GAAiCgE,EAAEC,OAAO3K,MAAO,UAGtJ,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAASgL,GAAwB,SAAC,eAEnE,IAGV,SAIZ,iBAAKpN,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,yBAI3C,IAAvB8C,GACI,gBAAK9C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMW,GAAsB,EAAM,OAG9D,gBAAK/C,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMW,GAAsB,EAAK,UAKhD,IAAvBD,EACI2F,GAAetI,KAAI,SAACC,GAAI,OACpB,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKwN,8BAA+BuB,SAAU,SAAC3E,GAAQ9D,GAA2B8D,EAAEC,OAAO3K,MAAO,OAEzI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKyN,8BAA+BsB,SAAU,SAAC3E,GAAQ5D,GAA2B4D,EAAEC,OAAO3K,MAAO,UAG7I,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK0N,uBAAwBqB,SAAU,SAAC3E,GAAQ1D,GAAuB0D,EAAEC,OAAO3K,MAAO,OAE9H,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK2N,uBAAwBoB,SAAU,SAAC3E,GAAQxD,GAAuBwD,EAAEC,OAAO3K,MAAO,UAGlI,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK4N,0BAA2BmB,SAAU,SAAC3E,GAAQtD,GAA0BsD,EAAEC,OAAO3K,MAAO,OAEpI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK6N,0BAA2BkB,SAAU,SAAC3E,GAAQpD,GAA0BoD,EAAEC,OAAO3K,MAAO,UAGxI,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAASuL,GAAsB,SAAC,eAEjE,IAGV,SAIZ,iBAAK3N,UAAU,wEAAuE,WAClF,iBAAKA,UAAU,2DAA0D,WACrE,gBAAKA,UAAU,uDAAsD,SAAC,wBAI5C,IAAtBgD,GACI,gBAAKhD,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAa,CAACM,QAAS,kBAAMa,GAAqB,EAAM,OAG7D,gBAAKjD,UAAU,gEAAgE6B,MAAO,CAAEC,QAAS,QAAS,UACtG,SAAC,MAAe,CAACM,QAAS,kBAAMa,GAAqB,EAAK,UAKhD,IAAtBD,EACI2F,GAAcxI,KAAI,SAACC,GAAI,OACnB,iBAAKJ,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAK+N,6BAA8BgB,SAAU,SAAC3E,GAAQlD,GAA0BkD,EAAEC,OAAO3K,MAAO,OAEvI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,qCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKgO,6BAA8Be,SAAU,SAAC3E,GAAQhD,GAA0BgD,EAAEC,OAAO3K,MAAO,UAG3I,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKiO,sBAAuBc,SAAU,SAAC3E,GAAQ9C,GAAsB8C,EAAEC,OAAO3K,MAAO,OAE5H,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKkO,sBAAuBa,SAAU,SAAC3E,GAAQ5C,GAAsB4C,EAAEC,OAAO3K,MAAO,UAGhI,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKmO,yBAA0BY,SAAU,SAAC3E,GAAQ1C,GAAyB0C,EAAEC,OAAO3K,MAAO,OAElI,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,gCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASC,aAAc9O,EAAKoO,yBAA0BW,SAAU,SAAC3E,GAAQxC,GAAyBwC,EAAEC,OAAO3K,MAAO,UAGtI,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAAS8L,GAAqB,SAAC,eAEhE,IAGV,SAIZ,iBAAKlO,UAAU,oFAAmF,WAC9F,gBAAKA,UAAU,uDAAsD,SAAC,mCAGtE,iBAAKA,UAAU,OAAM,WACjB,iBAAKA,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,sBAIX,iBAAKA,UAAU,4CAA2C,WACtD,SAAC,KAAK,CAACiP,KAAK,OAAOI,YAAY,sBAAsBvP,MAAOyD,EAAU4L,SA9zBzF,SAAC3E,GAClB,IAAM8E,EAAQ9E,EAAEC,OAAO3K,MAAMyP,cAE7B,GADA/L,EAAY8L,GACRA,EAAME,OAAS,EAAG,CAClB,IAAIC,EAAG,mDAA+CH,GACtD1D,MAAM6D,GACDvD,MAAK,SAACG,GACHA,EAAKD,OACAF,MAAK,SAACC,GACHhJ,EAAegJ,EACnB,GACR,IACJ7I,GAAqB,EACzB,MACIA,GAAqB,EAE7B,EA8yBsItD,UAAU,mBACvGqD,IAAqB,SAACsH,GAAW,WAG1C,iBAAK3K,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOiJ,GAAkBoG,SAAU,SAAC3E,GAAQxB,GAAoBwB,EAAEC,OAAO3K,MAAO,OAEzG,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAO6J,GAAkBwF,SAAU,SAAC3E,GAAQZ,GAAoBY,EAAEC,OAAO3K,MAAO,UAG7G,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAO+I,GAAkBsG,SAAU,SAAC3E,GAAQ1B,GAAoB0B,EAAEC,OAAO3K,MAAO,OAEzG,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAO2J,GAAkB0F,SAAU,SAAC3E,GAAQd,GAAoBc,EAAEC,OAAO3K,MAAO,UAG7G,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,8BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOmJ,GAAmBkG,SAAU,SAAC3E,GAAQtB,GAAqBsB,EAAEC,OAAO3K,MAAO,OAE3G,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,8BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAO+J,GAAmBsF,SAAU,SAAC3E,GAAQV,GAAqBU,EAAEC,OAAO3K,MAAO,UAG/G,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,sCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOqJ,GAAqBgG,SAAU,SAAC3E,GAAQpB,GAAuBoB,EAAEC,OAAO3K,MAAO,OAE/G,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,sCAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOiK,GAAqBoF,SAAU,SAAC3E,GAAQR,GAAuBQ,EAAEC,OAAO3K,MAAO,UAGnH,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,8BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOuJ,GAAmB8F,SAAU,SAAC3E,GAAQlB,GAAqBkB,EAAEC,OAAO3K,MAAO,OAE3G,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,8BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOmK,GAAmBkF,SAAU,SAAC3E,GAAQN,GAAqBM,EAAEC,OAAO3K,MAAO,UAG/G,iBAAKE,UAAU,6BAA4B,WACvC,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOyJ,GAAkB4F,SAAU,SAAC3E,GAAQhB,GAAoBgB,EAAEC,OAAO3K,MAAO,OAEzG,gBAAKE,UAAU,4CAA2C,UACtD,SAAC,KAAK,UAAC,6BAIX,gBAAKA,UAAU,4CAA2C,UACtD,SAAC,KAAK,CAACiP,KAAK,SAASnP,MAAOqK,GAAkBgF,SAAU,SAAC3E,GAAQJ,GAAoBI,EAAEC,OAAO3K,MAAO,UAG7G,gBAAKE,UAAU,kBAAiB,UAC5B,SAACoP,EAAA,EAAM,CAACpP,UAAU,aAAaoC,QAz3BxB,WAEvCwJ,MADO,wCACM,CACTC,OAAQ,MACRC,QAAS,CACL,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAU,CAAE1I,SAAAA,EAAUwF,iBAAAA,GAAkBY,iBAAAA,GAAkBd,iBAAAA,GAAkBY,iBAAAA,GAAkBR,kBAAAA,GAAmBY,kBAAAA,GAAmBV,oBAAAA,GAAqBY,oBAAAA,GAAqBR,iBAAAA,GAAkBY,iBAAAA,GAAkBd,kBAAAA,GAAmBY,kBAAAA,OAE/OiC,MAAK,SAACC,GACHA,EAAIC,OACCF,MAAK,SAACG,GACH7I,EAAY,IACZgG,GAAoB,GACpBY,GAAoB,GACpBtB,GAAoB,GACpBY,GAAoB,GACpBV,GAAoB,GACpBY,GAAoB,GACpBV,GAAqB,GACrBY,GAAqB,GACrBR,GAAqB,GACrBY,GAAqB,GACrBd,GAAuB,GACvBY,GAAuB,EAC3B,GACR,GACR,EA81B+G,SAAC,+BA2BpH,C","sources":["Common/Sidebar/sidebardata.js","Common/Sidebar/sidebar.js","Common/TopBar/index.js","Components/Cost/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as BiIcons from 'react-icons/bi';\r\nexport const SidebarData = [\r\n\r\n    {\r\n        title: 'Bundles',\r\n        path: `/bundles`,\r\n        icon: <BiIcons.BiCoinStack />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Cost',\r\n        icon: <BiIcons.BiRupee />,\r\n        path: \"/cost\",\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Add Creator',\r\n        path: '/addInfluencer',\r\n        icon: <BiIcons.BiAddToQueue />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState } from \"react\";\r\nimport './sidebar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from \"./sidebardata\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { AiFillCaretDown } from 'react-icons/ai';\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport logo from '../../Assets/Images/logo.png';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n            <div className={sidebar ? 'nav-menu' : 'nav-menu-active'}>\r\n                <nav className=\"navbar\">\r\n                    <img src={logo} className='logo' />\r\n                    <ul className=\"nav-menu-items\">\r\n                        {\r\n                            SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <li className={item.cName}>\r\n                                        {\r\n                                            sidebar === true ?\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                </Link>\r\n                                                :\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                    <span\r\n                                                    >{item.title}</span>\r\n                                                </Link>\r\n                                        }\r\n\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div >\r\n        </IconContext.Provider >\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss';\r\nimport help from '../../Assets/Images/help.png';\r\nimport { MdOutlineArrowDropDown } from 'react-icons/md';\r\nimport { useNavigate, Link, useLocation, useParams } from 'react-router-dom';\r\nimport UserIcon from '../../Assets/Images/userIcon.png';\r\n\r\nfunction TopBar() {\r\n\r\n    const [showDropDownSelected, setShowDropdownSelected] = useState(false);\r\n    const [comparedPageVisited, setComparedPageVisited] = useState(false);\r\n    const userId = localStorage.getItem('id');\r\n    const userName = localStorage.getItem('name');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const params = useParams()\r\n\r\n    let TOPBAR_TEXTS = [{ page: `/home/${userId}`, text: \"Home\" }, { page: \"/CompareLists\", text: \"Compare Lists\" }, { page: \"/CompareInfluencers\", text: \"Compare Influencers\" }, { page: \"/influencerslist/\", text: \"Search Results\" }, { page: \"/basketInfluencers\", text: \"Influencer Bundle\" }, { page: \"/userLists\", text: \"List\" }, { page: \"/profile\", text: \"Influencer Profile\" }, { page: `/updateprofile/${userId}`, text: \"Profile Settings\" }, { page: `/calculate`, text: \"Calculate Cost\" }]\r\n    let textToShow = TOPBAR_TEXTS.find(el => location.pathname.includes(el.page))?.text\r\n\r\n    const checkPage = () => {\r\n        {\r\n            textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                setComparedPageVisited(true)\r\n                :\r\n                setComparedPageVisited(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkPage();\r\n    }, [params])\r\n\r\n    const handleShowProfileDropdown = () => {\r\n        let data = showDropDownSelected ? false : true;\r\n        setShowDropdownSelected(data)\r\n    }\r\n\r\n    const handleRedirectToProfileSettings = () => {\r\n        navigate(`/updateprofile/${userId}`)\r\n    }\r\n\r\n    const handleRedireactToAbout = () => {\r\n        navigate(`/about`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        <Link to='/' />\r\n        localStorage.clear();\r\n        // let url = `13.127.230.191:4000/logout`;\r\n        // fetch((url), {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8',\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topbar\">\r\n                <div className={comparedPageVisited === true ? \"page_title_compared\" : \"page_title\"}>\r\n                    {textToShow || 'Admin Panel'}\r\n                    {textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                        <div style={{ display: 'flex', paddingTop: '1rem' }}>\r\n                            <div style={{ paddingLeft: '1.25rem' }}>\r\n                                <Link to=\"/CompareInfluencers\" className=\"tab_text\">Influencers</Link>\r\n                            </div>\r\n                            <div style={{ paddingLeft: '3.5rem' }}>\r\n                                <Link to=\"/CompareLists\" className=\"tab_text\">List</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span className=\"topbar_help_icon\"><img src={help} /></span>\r\n                    <img src={UserIcon} className=\"topbar_user_icon\" />\r\n                    <span className=\"topbar_username\">{userName}</span>\r\n                    <span style={{ marginRight: '4rem', cursor: 'pointer' }}><MdOutlineArrowDropDown onClick={handleShowProfileDropdown} /></span>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDropDownSelected === true ?\r\n                    <div className=\"dropdown\">\r\n                        <div onClick={handleRedirectToProfileSettings} className=\"dropdown_title\">Profile Settings</div>\r\n                        <div onClick={handleRedireactToAbout} className=\"dropdown_title\">About</div>\r\n                        <div onClick={handleLogout} className=\"dropdown_title\"><Link to='/'>Logout</Link></div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SideBar from '../../Common/Sidebar/sidebar';\r\nimport Topbar from '../../Common/TopBar/index';\r\nimport { Label, Input } from 'reactstrap';\r\nimport { AiFillCaretDown, AiFillCaretUp } from 'react-icons/ai';\r\nimport './index.scss';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction Cost() {\r\n\r\n    const [expandContentReel, setExpandContentReel] = useState(true);\r\n    const [expandContentPost, setExpandContentPost] = useState(false);\r\n    const [expandContentStory, setExpandContentStory] = useState(false);\r\n    const [expandContentSwipeup, setExpandContentSwipeup] = useState(false);\r\n    const [expandContentVideo, setExpandContentVideo] = useState(false);\r\n    const [expandContentIgtv, setExpandContentIgtv] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [suggestionIndex, setSuggestionIndex] = useState(0);\r\n    const [suggestionsActive, setSuggestionsActive] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n\r\n    const [minCostPerFollowerReel, setMinCostPerFollowerReel] = useState(0);\r\n    const [maxCostPerFollowerReel, setMaxCostPerFollowerReel] = useState(0);\r\n    const [minCostPerLikeReel, setMinCostPerLikeReel] = useState(0);\r\n    const [maxCostPerLikeReel, setMaxCostPerLikeReel] = useState(0);\r\n    const [minCostPerCommentReel, setMinCostPerCommentReel] = useState(0);\r\n    const [maxCostPerCommentReel, setMaxCostPerCommentReel] = useState(0);\r\n\r\n\r\n    const [minCostPerFollowerPost, setMinCostPerFollowerPost] = useState(0);\r\n    const [maxCostPerFollowerPost, setMaxCostPerFollowerPost] = useState(0);\r\n    const [minCostPerLikePost, setMinCostPerLikePost] = useState(0);\r\n    const [maxCostPerLikePost, setMaxCostPerLikePost] = useState(0);\r\n    const [minCostPerCommentPost, setMinCostPerCommentPost] = useState(0);\r\n    const [maxCostPerCommentPost, setMaxCostPerCommentPost] = useState(0);\r\n\r\n\r\n    const [minCostPerFollowerStory, setMinCostPerFollowerStory] = useState(0);\r\n    const [maxCostPerFollowerStory, setMaxCostPerFollowerStory] = useState(0);\r\n    const [minCostPerLikeStory, setMinCostPerLikeStory] = useState(0);\r\n    const [maxCostPerLikeStory, setMaxCostPerLikeStory] = useState(0);\r\n    const [minCostPerCommentStory, setMinCostPerCommentStory] = useState(0);\r\n    const [maxCostPerCommentStory, setMaxCostPerCommentStory] = useState(0);\r\n\r\n\r\n    const [minCostPerFollowerSwipeupStory, setMinCostPerFollowerSwipeupStory] = useState(0);\r\n    const [maxCostPerFollowerSwipeupStory, setMaxCostPerFollowerSwipeupStory] = useState(0);\r\n    const [minCostPerLikeSwipeupStory, setMinCostPerLikeSwipeupStory] = useState(0);\r\n    const [maxCostPerLikeSwipeupStory, setMaxCostPerLikeSwipeupStory] = useState(0);\r\n    const [minCostPerCommentSwipeupStory, setMinCostPerCommentSwipeupStory] = useState(0);\r\n    const [maxCostPerCommentSwipeupStory, setMaxCostPerCommentSwipeupStory] = useState(0);\r\n\r\n\r\n    const [minCostPerFollowerVideo, setMinCostPerFollowerVideo] = useState(0);\r\n    const [maxCostPerFollowerVideo, setMaxCostPerFollowerVideo] = useState(0);\r\n    const [minCostPerLikeVideo, setMinCostPerLikeVideo] = useState(0);\r\n    const [maxCostPerLikeVideo, setMaxCostPerLikeVideo] = useState(0);\r\n    const [minCostPerCommentVideo, setMinCostPerCommentVideo] = useState(0);\r\n    const [maxCostPerCommentVideo, setMaxCostPerCommentVideo] = useState(0);\r\n\r\n\r\n    const [minCostPerFollowerIgtv, setMinCostPerFollowerIgtv] = useState(0);\r\n    const [maxCostPerFollowerIgtv, setMaxCostPerFollowerIgtv] = useState(0);\r\n    const [minCostPerLikeIgtv, setMinCostPerLikeIgtv] = useState(0);\r\n    const [maxCostPerLikeIgtv, setMaxCostPerLikeIgtv] = useState(0);\r\n    const [minCostPerCommentIgtv, setMinCostPerCommentIgtv] = useState(0);\r\n    const [maxCostPerCommentIgtv, setMaxCostPerCommentIgtv] = useState(0);\r\n\r\n    const [basicRateReel, setBasicRateReel] = useState([]);\r\n    const [basicRatePost, setBasicRatePost] = useState([]);\r\n    const [basicRateStory, setBasicRateStory] = useState([]);\r\n    const [basicRateSwipeupStory, setBasicRateSwipeupStory] = useState([]);\r\n    const [basicRateVideo, setBasicRateVideo] = useState([]);\r\n    const [basicRateIgtv, setBasicRateIgtv] = useState([]);\r\n\r\n    const [minTotalPostCost, setMinTotalPostCost] = useState(0);\r\n    const [minTotalReelCost, setMinTotalReelCost] = useState(0);\r\n    const [minTotalStoryCost, setMinTotalStoryCost] = useState(0);\r\n    const [minTotalSwipeUpCost, setMinTotalSwipeUpCost] = useState(0);\r\n    const [minTotalVideoCost, setMinTotalVideoCost] = useState(0);\r\n    const [minTotalIgtvCost, setMinTotalIgtvCost] = useState(0);\r\n    const [maxTotalPostCost, setMaxTotalPostCost] = useState(0);\r\n    const [maxTotalReelCost, setMaxTotalReelCost] = useState(0);\r\n    const [maxTotalStoryCost, setMaxTotalStoryCost] = useState(0);\r\n    const [maxTotalSwipeUpCost, setMaxTotalSwipeUpCost] = useState(0);\r\n    const [maxTotalVideoCost, setMaxTotalVideoCost] = useState(0);\r\n    const [maxTotalIgtvCost, setMaxTotalIgtvCost] = useState(0);\r\n\r\n    const [basicValuesChanged, setBasicValuesChanged] = useState(false);\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const query = e.target.value.toLowerCase();\r\n        setUsername(query);\r\n        if (query.length > 1) {\r\n            let url = `13.127.230.191:4000/filterUsers?username=${query}`\r\n            fetch(url)\r\n                .then((data) => {\r\n                    data.json()\r\n                        .then((res) => {\r\n                            setSuggestions(res)\r\n                        })\r\n                })\r\n            setSuggestionsActive(true);\r\n        } else {\r\n            setSuggestionsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setUsername(e.target.innerText);\r\n        setSuggestions([]);\r\n        setSuggestionsActive(false);\r\n    };\r\n\r\n    const Suggestions = () => {\r\n        return (\r\n            <>\r\n                <div className=\"suggestions row no-gutters\" style={{ textAlign: 'initial' }}>\r\n                    <div className='col-lg-10 col-md-8 col-sm-6 col-xs-6 col-6'>\r\n                        <div style={{\r\n                            margin: '0.313rem', padding: 0, fontFamily: 'Noto Sans',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 700,\r\n                            fontSize: '1.125rem',\r\n                            lineHeight: '1rem',\r\n                            color: 'rgba(0, 0, 0, 0.7)'\r\n                        }}>Influencers</div>\r\n                        {suggestions.map((suggestion, index) => {\r\n                            return (\r\n                                <div\r\n                                    className={index === suggestionIndex ? \"active\" : \"\"}\r\n                                    key={index}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    {suggestion.username}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handleUpdateCostOfUniqueInfluencer = () => {\r\n        let url = `13.127.230.191:4000/setInfluencerCost`;\r\n        fetch((url), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ username, minTotalReelCost, maxTotalReelCost, minTotalPostCost, maxTotalPostCost, minTotalStoryCost, maxTotalStoryCost, minTotalSwipeUpCost, maxTotalSwipeUpCost, minTotalIgtvCost, maxTotalIgtvCost, minTotalVideoCost, maxTotalVideoCost })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setUsername('');\r\n                        setMinTotalIgtvCost(0);\r\n                        setMaxTotalIgtvCost(0);\r\n                        setMinTotalPostCost(0);\r\n                        setMaxTotalPostCost(0);\r\n                        setMinTotalReelCost(0);\r\n                        setMaxTotalReelCost(0);\r\n                        setMinTotalStoryCost(0);\r\n                        setMaxTotalStoryCost(0);\r\n                        setMinTotalVideoCost(0);\r\n                        setMaxTotalVideoCost(0);\r\n                        setMinTotalSwipeUpCost(0);\r\n                        setMaxTotalSwipeUpCost(0);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdateReelCost = () => {\r\n        let minCostPer1kFollowersForReel = minCostPerFollowerReel;\r\n        let maxCostper1KFollowersForReel = maxCostPerFollowerReel;\r\n        let minCostPerCommentForReel = minCostPerCommentReel;\r\n        let maxCostperCommentForReel = maxCostPerCommentReel;\r\n        let minCostPerLikeForReel = minCostPerLikeReel;\r\n        let maxCostperLikeForReel = maxCostPerLikeReel;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForReel`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForReel, maxCostper1KFollowersForReel, minCostPerCommentForReel, maxCostperCommentForReel, minCostPerLikeForReel, maxCostperLikeForReel })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdatePostCost = () => {\r\n        let minCostPer1kFollowersForPosts = minCostPerFollowerPost;\r\n        let maxCostper1KFollowersForPosts = maxCostPerFollowerPost;\r\n        let minCostPerCommentForPosts = minCostPerCommentPost;\r\n        let maxCostperCommentForPosts = maxCostPerCommentPost;\r\n        let minCostPerLikeForPosts = minCostPerLikePost;\r\n        let maxCostperLikeForPosts = maxCostPerLikePost;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForPosts`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForPosts, maxCostper1KFollowersForPosts, minCostPerCommentForPosts, maxCostperCommentForPosts, minCostPerLikeForPosts, maxCostperLikeForPosts })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdateStoryCost = () => {\r\n        let minCostPer1kFollowersForStory = minCostPerFollowerStory;\r\n        let maxCostper1KFollowersForStory = maxCostPerFollowerStory;\r\n        let minCostPerCommentForStory = minCostPerCommentStory;\r\n        let maxCostperCommentForStory = maxCostPerCommentStory;\r\n        let minCostPerLikeForStory = minCostPerLikeStory;\r\n        let maxCostperLikeForStory = maxCostPerLikeStory;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForStories`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForStory, maxCostper1KFollowersForStory, minCostPerCommentForStory, maxCostperCommentForStory, minCostPerLikeForStory, maxCostperLikeForStory })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdateSwipeUpCost = () => {\r\n        let minCostPer1kFollowersForSwipeUpStory = minCostPerFollowerSwipeupStory;\r\n        let maxCostper1KFollowersForSwipeUpStory = maxCostPerFollowerSwipeupStory;\r\n        let minCostPerLikeForSwipeUpStory = minCostPerLikeSwipeupStory;\r\n        let maxCostperLikeForSwipeUpStory = maxCostPerLikeSwipeupStory;\r\n        let minCostPerCommentForSwipeUpStory = minCostPerCommentSwipeupStory;\r\n        let maxCostperCommentForSwipeUpStory = maxCostPerCommentSwipeupStory;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForSwipeupStories`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForSwipeUpStory, maxCostper1KFollowersForSwipeUpStory, minCostPerLikeForSwipeUpStory, maxCostperLikeForSwipeUpStory, minCostPerCommentForSwipeUpStory, maxCostperCommentForSwipeUpStory })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdateVideoCost = () => {\r\n        let minCostPer1kFollowersForVideo = minCostPerFollowerVideo;\r\n        let maxCostper1KFollowersForVideo = maxCostPerFollowerVideo;\r\n        let minCostPerLikeForVideo = minCostPerLikeVideo;\r\n        let maxCostperLikeForVideo = maxCostPerLikeVideo;\r\n        let minCostPerCommentForVideo = minCostPerCommentVideo;\r\n        let maxCostperCommentForVideo = maxCostPerCommentVideo;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForVideos`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForVideo, maxCostper1KFollowersForVideo, minCostPerLikeForVideo, maxCostperLikeForVideo, minCostPerCommentForVideo, maxCostperCommentForVideo })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleUpdateIgtvCost = () => {\r\n        let minCostPer1kFollowersForIgtv = minCostPerFollowerIgtv;\r\n        let maxCostper1KFollowersForIgtv = maxCostPerFollowerIgtv;\r\n        let minCostPerLikeForIgtv = minCostPerLikeIgtv;\r\n        let maxCostperLikeForIgtv = maxCostPerLikeIgtv;\r\n        let minCostPerCommentForIgtv = minCostPerCommentIgtv;\r\n        let maxCostperCommentForIgtv = maxCostPerCommentIgtv;\r\n\r\n        let url = `13.127.230.191:4000/setCalculateCostForIgtv`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: JSON.stringify({ minCostPer1kFollowersForIgtv, maxCostper1KFollowersForIgtv, minCostPerLikeForIgtv, maxCostperLikeForIgtv, minCostPerCommentForIgtv, maxCostperCommentForIgtv })\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBasicValuesChanged(!basicValuesChanged);\r\n                    })\r\n            })\r\n    }\r\n\r\n    const fetchBasicRate = () => {\r\n        let url = `13.127.230.191:4000/getBasicRate`;\r\n        fetch(url)\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        console.log(data);\r\n                        if (data[0]?.costFactorReel) {\r\n                            setMinCostPerFollowerReel(data[0]?.costFactorReel?.minCostPer1kFollowersForReel);\r\n                            setMaxCostPerFollowerReel(data[0]?.costFactorReel?.maxCostper1KFollowersForReel);\r\n                            setMinCostPerLikeReel(data[0]?.costFactorReel?.minCostPerLikeForReel);\r\n                            setMaxCostPerLikeReel(data[0]?.costFactorReel?.maxCostperLikeForReel);\r\n                            setMinCostPerCommentReel(data[0]?.costFactorReel?.minCostPerCommentForReel);\r\n                            setMaxCostPerCommentReel(data[0]?.costFactorReel?.maxCostperCommentForReel);\r\n                            setBasicRateReel([data[0]?.costFactorReel])\r\n                        }\r\n\r\n                        if (data[0]?.costFactorPosts) {\r\n                            setMinCostPerFollowerPost(data[0]?.costFactorPosts?.minCostPer1kFollowersForPosts);\r\n                            setMaxCostPerFollowerPost(data[0]?.costFactorPosts?.maxCostper1KFollowersForPosts);\r\n                            setMinCostPerLikePost(data[0]?.costFactorPosts?.minCostPerLikeForPosts);\r\n                            setMaxCostPerLikePost(data[0]?.costFactorPosts?.maxCostperLikeForPosts);\r\n                            setMinCostPerCommentPost(data[0]?.costFactorPosts?.minCostPerCommentForPosts);\r\n                            setMaxCostPerCommentPost(data[0]?.costFactorPosts?.maxCostperCommentForPosts);\r\n                            setBasicRatePost([data[0]?.costFactorPosts])\r\n                        }\r\n\r\n                        if (data[0]?.costFactorStories) {\r\n                            setMinCostPerFollowerStory(data[0]?.costFactorStories?.minCostPer1kFollowersForStory);\r\n                            setMaxCostPerFollowerStory(data[0]?.costFactorStories?.maxCostper1KFollowersForStory);\r\n                            setMinCostPerLikeStory(data[0]?.costFactorStories?.minCostPerLikeForStory);\r\n                            setMaxCostPerLikeStory(data[0]?.costFactorStories?.maxCostperLikeForStory);\r\n                            setMinCostPerCommentStory(data[0]?.costFactorStories?.minCostPerCommentForStory);\r\n                            setMaxCostPerCommentStory(data[0]?.costFactorStories?.maxCostperCommentForStory);\r\n                            setBasicRateStory([data[0]?.costFactorStories])\r\n                        }\r\n\r\n                        if (data[0]?.costFactorSwipeUp) {\r\n                            setMinCostPerFollowerSwipeupStory(data[0]?.costFactorSwipeUp?.minCostPer1kFollowersForSwipeUpStory);\r\n                            setMaxCostPerFollowerSwipeupStory(data[0]?.costFactorSwipeUp?.maxCostper1KFollowersForSwipeUpStory);\r\n                            setMinCostPerLikeSwipeupStory(data[0]?.costFactorSwipeUp?.minCostPerLikeForSwipeUpStory);\r\n                            setMaxCostPerLikeSwipeupStory(data[0]?.costFactorSwipeUp?.maxCostperLikeForSwipeUpStory);\r\n                            setMinCostPerCommentSwipeupStory(data[0]?.costFactorSwipeUp?.minCostPerCommentForSwipeUpStory);\r\n                            setMaxCostPerCommentSwipeupStory(data[0]?.costFactorSwipeUp?.maxCostperCommentForSwipeUpStory);\r\n                            setBasicRateSwipeupStory([data[0]?.costFactorSwipeUp])\r\n                        }\r\n\r\n                        if (data[0]?.costFactorVideo) {\r\n                            setMinCostPerFollowerVideo(data[0]?.costFactorVideo?.minCostPer1kFollowersForVideo);\r\n                            setMaxCostPerFollowerVideo(data[0]?.costFactorVideo?.maxCostper1KFollowersForVideo);\r\n                            setMinCostPerLikeVideo(data[0]?.costFactorVideo?.minCostPerLikeForVideo);\r\n                            setMaxCostPerLikeVideo(data[0]?.costFactorVideo?.maxCostperLikeForVideo);\r\n                            setMinCostPerCommentVideo(data[0]?.costFactorVideo?.minCostPerCommentForVideo);\r\n                            setMaxCostPerCommentVideo(data[0]?.costFactorVideo?.maxCostperCommentForVideo);\r\n                            setBasicRateVideo([data[0]?.costFactorVideo])\r\n                        }\r\n\r\n                        if (data[0]?.costFactorIgtv) {\r\n                            setMinCostPerFollowerIgtv(data[0]?.costFactorIgtv?.minCostPer1kFollowersForIgtv);\r\n                            setMaxCostPerFollowerIgtv(data[0]?.costFactorIgtv?.maxCostper1KFollowersForIgtv);\r\n                            setMinCostPerLikeIgtv(data[0]?.costFactorIgtv?.minCostPerLikeForIgtv);\r\n                            setMaxCostPerLikeIgtv(data[0]?.costFactorIgtv?.maxCostperLikeForIgtv);\r\n                            setMinCostPerCommentIgtv(data[0]?.costFactorIgtv?.minCostPerCommentForIgtv);\r\n                            setMaxCostPerCommentIgtv(data[0]?.costFactorIgtv?.maxCostperCommentForIgtv);\r\n                            setBasicRateIgtv([data[0]?.costFactorIgtv])\r\n                        }\r\n                    })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBasicRate();\r\n    }, [basicValuesChanged])\r\n\r\n    return (\r\n        <>\r\n            <div className='cost_container row no-gutters'>\r\n                <div className='col-lg-2 col-md-2 col-sm-2 col-xs-2  col-3'>\r\n                    <SideBar />\r\n                </div>\r\n                <div className='cost_content col-lg-10 col-sm-10 col-md-10 col-xs-10 col-9'>\r\n                    <div className='row no-gutters'>\r\n                        <div className='col-lg-12 col-sm-12 col-md-12 col-xs-12 col-12 '>\r\n                            <Topbar />\r\n                        </div>\r\n                    </div>\r\n                    <div className='main_pane_container'>\r\n                        <div className='main_pane_content row no-gutters'>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Reel\r\n                                    </div>\r\n                                    {\r\n                                        expandContentReel === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentReel(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentReel(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentReel === true ?\r\n                                        basicRateReel.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForReel} onChange={(e) => { setMinCostPerFollowerReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForReel} onChange={(e) => { setMaxCostPerFollowerReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForReel} onChange={(e) => { setMinCostPerLikeReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForReel} onChange={(e) => { setMaxCostPerLikeReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForReel} onChange={(e) => { setMinCostPerCommentReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForReel} onChange={(e) => { setMaxCostPerCommentReel(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdateReelCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Post\r\n                                    </div>\r\n                                    {\r\n                                        expandContentPost === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentPost(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentPost(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentPost === true ?\r\n                                        basicRatePost.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForPosts} onChange={(e) => { setMinCostPerFollowerPost(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForPosts} onChange={(e) => { setMaxCostPerFollowerPost(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForPosts} onChange={(e) => { setMinCostPerLikePost(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForPosts} onChange={(e) => { setMaxCostPerLikePost(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForPosts} onChange={(e) => { setMinCostPerCommentPost(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForPosts} onChange={(e) => { setMaxCostPerCommentPost(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdatePostCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Story\r\n                                    </div>\r\n                                    {\r\n                                        expandContentStory === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentStory(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentStory(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentStory === true ?\r\n                                        basicRateStory.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForStory} onChange={(e) => { setMinCostPerFollowerStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForStory} onChange={(e) => { setMaxCostPerFollowerStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForStory} onChange={(e) => { setMinCostPerLikeStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForStory} onChange={(e) => { setMaxCostPerLikeStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForStory} onChange={(e) => { setMinCostPerCommentStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForStory} onChange={(e) => { setMaxCostPerCommentStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdateStoryCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Swipe up Story\r\n                                    </div>\r\n                                    {\r\n                                        expandContentSwipeup === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentSwipeup(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentSwipeup(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentSwipeup === true ?\r\n                                        basicRateSwipeupStory.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForSwipeUpStory} onChange={(e) => { setMinCostPerFollowerSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForSwipeUpStory} onChange={(e) => { setMaxCostPerFollowerSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForSwipeUpStory} onChange={(e) => { setMinCostPerLikeSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForSwipeUpStory} onChange={(e) => { setMaxCostPerLikeSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForSwipeUpStory} onChange={(e) => { setMinCostPerCommentSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForSwipeUpStory} onChange={(e) => { setMaxCostPerCommentSwipeupStory(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdateSwipeUpCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Video\r\n                                    </div>\r\n                                    {\r\n                                        expandContentVideo === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentVideo(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentVideo(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentVideo === true ?\r\n                                        basicRateVideo.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForVideo} onChange={(e) => { setMinCostPerFollowerVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForVideo} onChange={(e) => { setMaxCostPerFollowerVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForVideo} onChange={(e) => { setMinCostPerLikeVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForVideo} onChange={(e) => { setMaxCostPerLikeVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForVideo} onChange={(e) => { setMinCostPerCommentVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForVideo} onChange={(e) => { setMaxCostPerCommentVideo(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdateVideoCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='row no-gutters align-items-center justify-content-center'>\r\n                                    <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                        Basic Cost Of Igtv\r\n                                    </div>\r\n                                    {\r\n                                        expandContentIgtv === true ?\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretUp onClick={() => setExpandContentIgtv(false)} />\r\n                                            </div>\r\n                                            :\r\n                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-3 justify-content-end' style={{ display: 'flex' }}>\r\n                                                <AiFillCaretDown onClick={() => setExpandContentIgtv(true)} />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                                {\r\n                                    expandContentIgtv === true ?\r\n                                        basicRateIgtv.map((item) =>\r\n                                            <div className='form'>\r\n                                                <div className='form_pane_1 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPer1kFollowersForIgtv} onChange={(e) => { setMinCostPerFollowerIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per 1K Followers\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostper1KFollowersForIgtv} onChange={(e) => { setMaxCostPerFollowerIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_2 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerLikeForIgtv} onChange={(e) => { setMinCostPerLikeIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Like\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperLikeForIgtv} onChange={(e) => { setMaxCostPerLikeIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='form_pane_3 row no-gutters'>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Minimum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.minCostPerCommentForIgtv} onChange={(e) => { setMinCostPerCommentIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Label>\r\n                                                            Maximum Cost per Comment\r\n                                                        </Label>\r\n                                                    </div>\r\n                                                    <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                                        <Input type='number' defaultValue={item.maxCostperCommentForIgtv} onChange={(e) => { setMaxCostPerCommentIgtv(e.target.value) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='update_btn_pane'>\r\n                                                    <Button className='update_btn' onClick={handleUpdateIgtvCost}>Update</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto unique_cost'>\r\n                                <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                    Set Cost of Unique Influencer\r\n                                </div>\r\n                                <div className='form'>\r\n                                    <div className='form_pane_1 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Add Influencer\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='text' placeholder='Influencer username' value={username} onChange={handleChange} className='dropdown_input' />\r\n                                            {suggestionsActive && <Suggestions />}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost For Reel\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalReelCost} onChange={(e) => { setMinTotalReelCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost For Reel\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalReelCost} onChange={(e) => { setMaxTotalReelCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost for Post\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalPostCost} onChange={(e) => { setMinTotalPostCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost for Post\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalPostCost} onChange={(e) => { setMaxTotalPostCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost For Story\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalStoryCost} onChange={(e) => { setMinTotalStoryCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost For Story\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalStoryCost} onChange={(e) => { setMaxTotalStoryCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost For Swipeup Story\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalSwipeUpCost} onChange={(e) => { setMinTotalSwipeUpCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost For Swipeup Story\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalSwipeUpCost} onChange={(e) => { setMaxTotalSwipeUpCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost For Video\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalVideoCost} onChange={(e) => { setMinTotalVideoCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost For Video\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalVideoCost} onChange={(e) => { setMaxTotalVideoCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='form_pane_2 row no-gutters'>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Minimum Cost For Igtv\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={minTotalIgtvCost} onChange={(e) => { setMinTotalIgtvCost(e.target.value) }} />\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Label>\r\n                                                Maximum Cost For Igtv\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-6 col-xs-6 col-6'>\r\n                                            <Input type='number' value={maxTotalIgtvCost} onChange={(e) => { setMaxTotalIgtvCost(e.target.value) }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='update_btn_pane'>\r\n                                        <Button className='update_btn' onClick={handleUpdateCostOfUniqueInfluencer}>Update</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className='form_container col-lg-10 col-md-12 col-sm-12 col-xs-12 col-12 mx-auto'>\r\n                                <div className='form_title col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                    Set Cost with CSV file\r\n                                </div>\r\n                                <div className='form'>\r\n                                    <div className='form_pane_1 row no-gutters' style={{ padding: '1rem' }}>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-12 col-xs-12 col-12'>\r\n                                            <Label>\r\n                                                Select CSV File\r\n                                            </Label>\r\n                                        </div>\r\n                                        <div className='col-lg-3 col-md-3 col-sm-12 col-xs-12 col-12'>\r\n                                            <Input type='file' />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Cost;"],"names":["SidebarData","title","path","icon","cName","useState","sidebar","value","color","className","src","logo","map","item","index","to","showDropDownSelected","setShowDropdownSelected","comparedPageVisited","setComparedPageVisited","userId","localStorage","getItem","userName","navigate","useNavigate","location","useLocation","params","useParams","textToShow","page","text","find","el","pathname","includes","useEffect","style","display","paddingTop","paddingLeft","alignItems","marginRight","cursor","onClick","clear","expandContentReel","setExpandContentReel","expandContentPost","setExpandContentPost","expandContentStory","setExpandContentStory","expandContentSwipeup","setExpandContentSwipeup","expandContentVideo","setExpandContentVideo","expandContentIgtv","setExpandContentIgtv","suggestions","setSuggestions","suggestionIndex","suggestionsActive","setSuggestionsActive","username","setUsername","minCostPerFollowerReel","setMinCostPerFollowerReel","maxCostPerFollowerReel","setMaxCostPerFollowerReel","minCostPerLikeReel","setMinCostPerLikeReel","maxCostPerLikeReel","setMaxCostPerLikeReel","minCostPerCommentReel","setMinCostPerCommentReel","maxCostPerCommentReel","setMaxCostPerCommentReel","minCostPerFollowerPost","setMinCostPerFollowerPost","maxCostPerFollowerPost","setMaxCostPerFollowerPost","minCostPerLikePost","setMinCostPerLikePost","maxCostPerLikePost","setMaxCostPerLikePost","minCostPerCommentPost","setMinCostPerCommentPost","maxCostPerCommentPost","setMaxCostPerCommentPost","minCostPerFollowerStory","setMinCostPerFollowerStory","maxCostPerFollowerStory","setMaxCostPerFollowerStory","minCostPerLikeStory","setMinCostPerLikeStory","maxCostPerLikeStory","setMaxCostPerLikeStory","minCostPerCommentStory","setMinCostPerCommentStory","maxCostPerCommentStory","setMaxCostPerCommentStory","minCostPerFollowerSwipeupStory","setMinCostPerFollowerSwipeupStory","maxCostPerFollowerSwipeupStory","setMaxCostPerFollowerSwipeupStory","minCostPerLikeSwipeupStory","setMinCostPerLikeSwipeupStory","maxCostPerLikeSwipeupStory","setMaxCostPerLikeSwipeupStory","minCostPerCommentSwipeupStory","setMinCostPerCommentSwipeupStory","maxCostPerCommentSwipeupStory","setMaxCostPerCommentSwipeupStory","minCostPerFollowerVideo","setMinCostPerFollowerVideo","maxCostPerFollowerVideo","setMaxCostPerFollowerVideo","minCostPerLikeVideo","setMinCostPerLikeVideo","maxCostPerLikeVideo","setMaxCostPerLikeVideo","minCostPerCommentVideo","setMinCostPerCommentVideo","maxCostPerCommentVideo","setMaxCostPerCommentVideo","minCostPerFollowerIgtv","setMinCostPerFollowerIgtv","maxCostPerFollowerIgtv","setMaxCostPerFollowerIgtv","minCostPerLikeIgtv","setMinCostPerLikeIgtv","maxCostPerLikeIgtv","setMaxCostPerLikeIgtv","minCostPerCommentIgtv","setMinCostPerCommentIgtv","maxCostPerCommentIgtv","setMaxCostPerCommentIgtv","basicRateReel","setBasicRateReel","basicRatePost","setBasicRatePost","basicRateStory","setBasicRateStory","basicRateSwipeupStory","setBasicRateSwipeupStory","basicRateVideo","setBasicRateVideo","basicRateIgtv","setBasicRateIgtv","minTotalPostCost","setMinTotalPostCost","minTotalReelCost","setMinTotalReelCost","minTotalStoryCost","setMinTotalStoryCost","minTotalSwipeUpCost","setMinTotalSwipeUpCost","minTotalVideoCost","setMinTotalVideoCost","minTotalIgtvCost","setMinTotalIgtvCost","maxTotalPostCost","setMaxTotalPostCost","maxTotalReelCost","setMaxTotalReelCost","maxTotalStoryCost","setMaxTotalStoryCost","maxTotalSwipeUpCost","setMaxTotalSwipeUpCost","maxTotalVideoCost","setMaxTotalVideoCost","maxTotalIgtvCost","setMaxTotalIgtvCost","basicValuesChanged","setBasicValuesChanged","handleClick","e","target","innerText","Suggestions","textAlign","margin","padding","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","suggestion","handleUpdateReelCost","minCostPer1kFollowersForReel","maxCostper1KFollowersForReel","minCostPerCommentForReel","maxCostperCommentForReel","minCostPerLikeForReel","maxCostperLikeForReel","fetch","method","headers","body","JSON","stringify","then","res","json","data","handleUpdatePostCost","minCostPer1kFollowersForPosts","maxCostper1KFollowersForPosts","minCostPerCommentForPosts","maxCostperCommentForPosts","minCostPerLikeForPosts","maxCostperLikeForPosts","handleUpdateStoryCost","minCostPer1kFollowersForStory","maxCostper1KFollowersForStory","minCostPerCommentForStory","maxCostperCommentForStory","minCostPerLikeForStory","maxCostperLikeForStory","handleUpdateSwipeUpCost","minCostPer1kFollowersForSwipeUpStory","maxCostper1KFollowersForSwipeUpStory","minCostPerLikeForSwipeUpStory","maxCostperLikeForSwipeUpStory","minCostPerCommentForSwipeUpStory","maxCostperCommentForSwipeUpStory","handleUpdateVideoCost","minCostPer1kFollowersForVideo","maxCostper1KFollowersForVideo","minCostPerLikeForVideo","maxCostperLikeForVideo","minCostPerCommentForVideo","maxCostperCommentForVideo","handleUpdateIgtvCost","minCostPer1kFollowersForIgtv","maxCostper1KFollowersForIgtv","minCostPerLikeForIgtv","maxCostperLikeForIgtv","minCostPerCommentForIgtv","maxCostperCommentForIgtv","console","log","costFactorReel","costFactorPosts","costFactorStories","costFactorSwipeUp","costFactorVideo","costFactorIgtv","type","defaultValue","onChange","Button","placeholder","query","toLowerCase","length","url"],"sourceRoot":""}