{"version":3,"file":"static/js/21.43847101.chunk.js","mappings":"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","sources":["Common/Loader/index.js","Common/Sidebar/sidebardata.js","Common/Sidebar/sidebar.js","Common/TopBar/index.js","Components/Bundles/index.js"],"sourcesContent":["import React from \"react\";\r\nimport '../Loader/index.scss';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default Loader;","import React, { useEffect } from \"react\";\r\nimport * as BiIcons from 'react-icons/bi';\r\nexport const SidebarData = [\r\n\r\n    {\r\n        title: 'Bundles',\r\n        path: `/bundles`,\r\n        icon: <BiIcons.BiCoinStack />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Cost',\r\n        icon: <BiIcons.BiRupee />,\r\n        path: \"/cost\",\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Add Creator',\r\n        path: '/addInfluencer',\r\n        icon: <BiIcons.BiAddToQueue />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState } from \"react\";\r\nimport './sidebar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from \"./sidebardata\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { AiFillCaretDown } from 'react-icons/ai';\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport logo from '../../Assets/Images/logo.png';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n            <div className={sidebar ? 'nav-menu' : 'nav-menu-active'}>\r\n                <nav className=\"navbar\">\r\n                    <img src={logo} className='logo' />\r\n                    <ul className=\"nav-menu-items\">\r\n                        {\r\n                            SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <li className={item.cName}>\r\n                                        {\r\n                                            sidebar === true ?\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                </Link>\r\n                                                :\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                    <span\r\n                                                    >{item.title}</span>\r\n                                                </Link>\r\n                                        }\r\n\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div >\r\n        </IconContext.Provider >\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss';\r\nimport help from '../../Assets/Images/help.png';\r\nimport { MdOutlineArrowDropDown } from 'react-icons/md';\r\nimport { useNavigate, Link, useLocation, useParams } from 'react-router-dom';\r\nimport UserIcon from '../../Assets/Images/userIcon.png';\r\n\r\nfunction TopBar() {\r\n\r\n    const [showDropDownSelected, setShowDropdownSelected] = useState(false);\r\n    const [comparedPageVisited, setComparedPageVisited] = useState(false);\r\n    const userId = localStorage.getItem('id');\r\n    const userName = localStorage.getItem('name');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const params = useParams()\r\n\r\n    let TOPBAR_TEXTS = [{ page: `/home/${userId}`, text: \"Home\" }, { page: \"/CompareLists\", text: \"Compare Lists\" }, { page: \"/CompareInfluencers\", text: \"Compare Influencers\" }, { page: \"/influencerslist/\", text: \"Search Results\" }, { page: \"/basketInfluencers\", text: \"Influencer Bundle\" }, { page: \"/userLists\", text: \"List\" }, { page: \"/profile\", text: \"Influencer Profile\" }, { page: `/updateprofile/${userId}`, text: \"Profile Settings\" }, { page: `/calculate`, text: \"Calculate Cost\" }]\r\n    let textToShow = TOPBAR_TEXTS.find(el => location.pathname.includes(el.page))?.text\r\n\r\n    const checkPage = () => {\r\n        {\r\n            textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                setComparedPageVisited(true)\r\n                :\r\n                setComparedPageVisited(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkPage();\r\n    }, [params])\r\n\r\n    const handleShowProfileDropdown = () => {\r\n        let data = showDropDownSelected ? false : true;\r\n        setShowDropdownSelected(data)\r\n    }\r\n\r\n    const handleRedirectToProfileSettings = () => {\r\n        navigate(`/updateprofile/${userId}`)\r\n    }\r\n\r\n    const handleRedireactToAbout = () => {\r\n        navigate(`/about`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        <Link to='/' />\r\n        localStorage.clear();\r\n        // let url = `http://65.0.110.147:4000/logout`;\r\n        // fetch((url), {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8',\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topbar\">\r\n                <div className={comparedPageVisited === true ? \"page_title_compared\" : \"page_title\"}>\r\n                    {textToShow || 'Admin Panel'}\r\n                    {textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                        <div style={{ display: 'flex', paddingTop: '1rem' }}>\r\n                            <div style={{ paddingLeft: '1.25rem' }}>\r\n                                <Link to=\"/CompareInfluencers\" className=\"tab_text\">Influencers</Link>\r\n                            </div>\r\n                            <div style={{ paddingLeft: '3.5rem' }}>\r\n                                <Link to=\"/CompareLists\" className=\"tab_text\">List</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span className=\"topbar_help_icon\"><img src={help} /></span>\r\n                    <img src={UserIcon} className=\"topbar_user_icon\" />\r\n                    <span className=\"topbar_username\">{userName}</span>\r\n                    <span style={{ marginRight: '4rem', cursor: 'pointer' }}><MdOutlineArrowDropDown onClick={handleShowProfileDropdown} /></span>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDropDownSelected === true ?\r\n                    <div className=\"dropdown\">\r\n                        <div onClick={handleRedirectToProfileSettings} className=\"dropdown_title\">Profile Settings</div>\r\n                        <div onClick={handleRedireactToAbout} className=\"dropdown_title\">About</div>\r\n                        <div onClick={handleLogout} className=\"dropdown_title\"><Link to='/'>Logout</Link></div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SideBar from '../../Common/Sidebar/sidebar';\r\nimport Topbar from '../../Common/TopBar/index';\r\nimport Button from '@mui/material/Button';\r\nimport Loader from '../../Common/Loader/index';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport '../Bundles/index.scss';\r\nimport { FcEditImage } from 'react-icons/fc';\r\nimport { IoMdPersonAdd } from 'react-icons/io';\r\nimport { Input, Label } from 'reactstrap';\r\n\r\nfunction Bundles() {\r\n\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [bundlesData, setBundlesData] = useState([]);\r\n    const [createBundleModalOpened, setCreateBundleModalOpened] = useState(false);\r\n    const [editImageModalOpened, setEditImageModalOpened] = useState(false);\r\n    const [addInfluencerModalOpened, setAddInfluencerModalOpened] = useState(false);\r\n    const [newBundleCreated, setNewBundleCreated] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [suggestionIndex, setSuggestionIndex] = useState(0);\r\n    const [suggestionsActive, setSuggestionsActive] = useState(false);\r\n    const [basketToBeAdded, setBasketToBeAdded] = useState('');\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [basketToImageAdded, setBasketToImageAdded] = useState('');\r\n\r\n\r\n    const token = localStorage.getItem('token')\r\n\r\n    const handleAddBundle = () => {\r\n        setCreateBundleModalOpened(true);\r\n    }\r\n\r\n    const createBundle = () => {\r\n        let url = `http://65.0.110.147:4000/createCategorizedBasket`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                'x-access-token': token\r\n            },\r\n            body: JSON.stringify({ categoryName })\r\n        })\r\n            .then((data) => {\r\n                data.json()\r\n                    .then((response) => {\r\n                        setNewBundleCreated(true)\r\n                        setCreateBundleModalOpened(!createBundleModalOpened)\r\n                        setCategoryName('');\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleAddInfluencer = (item) => {\r\n        setBasketToBeAdded(item.categoryName)\r\n        setAddInfluencerModalOpened(true);\r\n    }\r\n\r\n    const handleEditImage = (item) => {\r\n        setBasketToImageAdded(item.categoryName)\r\n        setEditImageModalOpened(true)\r\n    }\r\n\r\n    const fetchBundleDetails = () => {\r\n        let url = `http://65.0.110.147:4000/showCategorizedBasket`;\r\n        fetch(url)\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setBundlesData(data)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const query = e.target.value.toLowerCase();\r\n        setUsername(query);\r\n        if (query.length > 1) {\r\n            let url = `http://65.0.110.147:4000/filterUsers?username=${query}`\r\n            fetch(url)\r\n                .then((data) => {\r\n                    data.json()\r\n                        .then((res) => {\r\n                            setSuggestions(res)\r\n                        })\r\n                })\r\n            setSuggestionsActive(true);\r\n        } else {\r\n            setSuggestionsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setUsername(e.target.innerText);\r\n        setSuggestions([]);\r\n        setSuggestionsActive(false);\r\n    };\r\n\r\n    const Suggestions = () => {\r\n        return (\r\n            <>\r\n                <div className=\"suggestions row no-gutters\" style={{ textAlign: 'initial' }}>\r\n                    <div className='col-lg-10 col-md-8 col-sm-6 col-xs-6 col-6'>\r\n                        <div style={{\r\n                            margin: '0.313rem', padding: 0, fontFamily: 'Noto Sans',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 700,\r\n                            fontSize: '1.125rem',\r\n                            lineHeight: '1rem',\r\n                            color: 'rgba(0, 0, 0, 0.7)'\r\n                        }}>Influencers</div>\r\n                        {suggestions.map((suggestion, index) => {\r\n                            return (\r\n                                <div\r\n                                    className={index === suggestionIndex ? \"active\" : \"\"}\r\n                                    key={index}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    {suggestion.username}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const addInfluencer = (username) => {\r\n        let categoryName = basketToBeAdded;\r\n        let url = `http://65.0.110.147:4000/addInfluencersToBasket`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, categoryName }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n                'x-access-token': token\r\n            }\r\n        })\r\n            .then((res) => {\r\n                res.json()\r\n                    .then((data) => {\r\n                        setUsername('')\r\n                        setAddInfluencerModalOpened(false)\r\n                        // setBasketToBeAdded('')\r\n                    })\r\n            })\r\n    }\r\n\r\n    const uploadImage = () => {\r\n        const data = new FormData();\r\n        data.append('image', selectedImage);\r\n        // data.append('file_attachment', selectedImage);\r\n        console.log(data);\r\n        let url = `http://65.0.110.147:4000/addImageToBasket?categoryName=${basketToImageAdded}`;\r\n        fetch((url), {\r\n            method: 'POST',\r\n            body: data,\r\n            headers: {\r\n                'x-access-token': token,\r\n            }\r\n        })\r\n            .then((data) => {\r\n                data.json()\r\n                    .then((response) => {\r\n                        setBasketToImageAdded('')\r\n                        setEditImageModalOpened(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBundleDetails();\r\n    }, [newBundleCreated, addInfluencerModalOpened, editImageModalOpened])\r\n\r\n    return (\r\n        <>\r\n            <div className='bundle_container row no-gutters'>\r\n                <div className='col-lg-2 col-md-2 col-sm-2 col-xs-2  col-3'>\r\n                    <SideBar />\r\n                </div>\r\n                <div className='bundle_content col-lg-10 col-sm-10 col-md-10 col-xs-10 col-9'>\r\n                    <div className='row no-gutters'>\r\n                        <div className='col-lg-12 col-sm-12 col-md-12 col-xs-12 col-12 '>\r\n                            <Topbar />\r\n                        </div>\r\n                    </div>\r\n                    <div className='row no-gutters main_pane_container'>\r\n                        <div className='top_lane'>\r\n                            <Button className='add_btn' onClick={handleAddBundle}>Create Bundle</Button>\r\n                            {\r\n                                createBundleModalOpened === true ?\r\n                                    <div className='overlay'>\r\n                                        <div className='bundle_section row no-gutters'>\r\n                                            <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12'>\r\n                                                <Label>\r\n                                                    Add New Bundle\r\n                                                </Label>\r\n                                            </div>\r\n                                            <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12'>\r\n                                                <Input className='input_bundlename' placeholder='Bundle Name' value={categoryName} onChange={(e) => { setCategoryName(e.target.value) }} />\r\n                                            </div>\r\n                                            <div className='btn_lane row no-gutters'>\r\n                                                <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                    <Button className='add_bundle_btn' onClick={createBundle}>Create</Button>\r\n                                                </div>\r\n                                                <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                    <Button className='cancel_btn' onClick={() => { setCreateBundleModalOpened(!createBundleModalOpened) }}>Cancel</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        {bundlesData[0] ?\r\n                            <div className='main_pane_content'>\r\n                                <div className='middle_main_pane row no-gutters'>\r\n                                    <TableContainer component={Paper} className='table_paper'>\r\n                                        <Table stickyHeader className=\"table_container\" >\r\n                                            <TableHead className='table_head'>\r\n                                                <TableRow className='table_row'>\r\n                                                    <TableCell className='table_head_value_1'>Bundle's Name</TableCell>\r\n                                                    <TableCell className='table_head_value' align=\"center\">Image</TableCell>\r\n                                                    <TableCell className='table_head_value' align=\"center\">Influencers Count</TableCell>\r\n                                                    <TableCell className='table_head_value' align=\"center\"></TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    bundlesData.map((item, index) =>\r\n                                                        <>\r\n                                                            <TableRow className='table_body_row'>\r\n                                                                <TableCell component=\"th\" scope=\"row\" key={item.categoryName} className='table_body_value_1' >\r\n                                                                    {item.categoryName}\r\n                                                                </TableCell>\r\n                                                                <TableCell className='table_body_value' align=\"center\">\r\n                                                                    <img src={`https://socialbox-bckt.s3.ap-south-1.amazonaws.com/Basket/${item.categoryName}/image.png`} className=\"category_image\" />\r\n                                                                </TableCell>\r\n                                                                <TableCell className='table_body_value' align=\"center\">\r\n                                                                    {item.basketInfluencersCount}\r\n                                                                </TableCell>\r\n                                                                <TableCell className='table_body_value' align=\"center\">\r\n                                                                    <FcEditImage className='table_icons' onClick={() => { handleEditImage(item) }} />\r\n                                                                    <IoMdPersonAdd className='table_icons' onClick={() => { handleAddInfluencer(item) }} />\r\n                                                                    {\r\n                                                                        editImageModalOpened === true ?\r\n                                                                            basketToImageAdded === item.categoryName ?\r\n                                                                                <div className='overlay'>\r\n                                                                                    <div className='bundle_section row no-gutters' style={{ textAlign: 'initial' }}>\r\n                                                                                        <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12'>\r\n                                                                                            <Label>\r\n                                                                                                Edit Basket's Image\r\n                                                                                            </Label>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12' style={{ marginTop: '1rem' }}>\r\n                                                                                            <Input type='file' onChange={(event) => setSelectedImage(event.target.files[0])} />\r\n                                                                                        </div>\r\n                                                                                        <div className='btn_lane row no-gutters'>\r\n                                                                                            <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                                                                <Button className='add_bundle_btn' onClick={() => { uploadImage(item) }}>Upload</Button>\r\n                                                                                            </div>\r\n                                                                                            <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                                                                <Button className='cancel_btn' onClick={() => { setEditImageModalOpened(!editImageModalOpened) }}>Cancel</Button>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                :\r\n                                                                                null\r\n                                                                            : null\r\n                                                                    }\r\n                                                                    {\r\n                                                                        addInfluencerModalOpened === true ?\r\n                                                                            <div className='overlay'>\r\n                                                                                <div className='bundle_section row no-gutters' style={{ textAlign: 'initial' }}>\r\n                                                                                    <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12'>\r\n                                                                                        <Label>\r\n                                                                                            Add New Influencer\r\n                                                                                        </Label>\r\n                                                                                    </div>\r\n                                                                                    <div className='col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12'>\r\n                                                                                        <Input className='input_bundlename' placeholder='Influencer username' value={username} onChange={handleChange} />\r\n                                                                                        {suggestionsActive && <Suggestions />}\r\n                                                                                    </div>\r\n                                                                                    <div className='btn_lane row no-gutters'>\r\n                                                                                        <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                                                            <Button className='add_bundle_btn' onClick={() => { addInfluencer(username) }}>Add</Button>\r\n                                                                                        </div>\r\n                                                                                        <div className='col-lg-6 col-md-6 col-sm-6 col-xs-6 col-6'>\r\n                                                                                            <Button className='cancel_btn' onClick={() => { setAddInfluencerModalOpened(!addInfluencerModalOpened) }}>Cancel</Button>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            :\r\n                                                                            null\r\n                                                                    }\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='inline_loader'>\r\n                                <Loader />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Bundles;"],"names":["class","SidebarData","title","path","icon","cName","useState","sidebar","value","color","className","src","logo","map","item","index","to","showDropDownSelected","setShowDropdownSelected","comparedPageVisited","setComparedPageVisited","userId","localStorage","getItem","userName","navigate","useNavigate","location","useLocation","params","useParams","textToShow","page","text","find","el","pathname","includes","useEffect","style","display","paddingTop","paddingLeft","alignItems","marginRight","cursor","onClick","clear","categoryName","setCategoryName","username","setUsername","bundlesData","setBundlesData","createBundleModalOpened","setCreateBundleModalOpened","editImageModalOpened","setEditImageModalOpened","addInfluencerModalOpened","setAddInfluencerModalOpened","newBundleCreated","setNewBundleCreated","suggestions","setSuggestions","suggestionIndex","suggestionsActive","setSuggestionsActive","basketToBeAdded","setBasketToBeAdded","selectedImage","setSelectedImage","basketToImageAdded","setBasketToImageAdded","token","handleChange","e","query","target","toLowerCase","length","url","fetch","then","data","json","res","handleClick","innerText","Suggestions","textAlign","margin","padding","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","suggestion","Button","placeholder","onChange","method","headers","body","JSON","stringify","response","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","scope","basketInfluencersCount","handleEditImage","handleAddInfluencer","marginTop","type","event","files","FormData","append","console","log","uploadImage","addInfluencer","Loader"],"sourceRoot":""}